generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String     @id @default(uuid())
  createdAt      DateTime   @default(now())
  updatedAt      DateTime?  @updatedAt
  email          String     @unique
  password       String
  emailConfirmed Boolean    @default(false)
  currency       String?
  categories     Category[]
  expenses       Expense[]
  savingGoals    SavingGoal[]
  investments    Investment[]
}

model Category {
  id            String        @id @default(uuid())
  createdAt     DateTime      @default(now())
  updatedAt     DateTime?     @updatedAt
  name          String
  icon          String
  userId        String
  user          User          @relation(fields: [userId], references: [id])
  subcategories Subcategory[]
}

model Subcategory {
  id           String    @id @default(uuid())
  createdAt    DateTime  @default(now())
  updatedAt    DateTime? @updatedAt
  rolloverDate DateTime  @default(now())
  name         String
  icon         String
  budgetAmount Int
  categoryId   String
  expenses     Expense[]
  category     Category  @relation(fields: [categoryId], references: [id])
}

model Expense {
  id            String      @id @default(uuid())
  createdAt     DateTime    @default(now())
  updatedAt     DateTime?   @updatedAt
  date          DateTime
  amount        Int
  description   String?
  userId        String
  subcategoryId String
  subcategory   Subcategory @relation(fields: [subcategoryId], references: [id])
  user          User        @relation(fields: [userId], references: [id])
}

model SavingGoal {
  id                String        @id @default(uuid())
  userId            String
  createdAt         DateTime      @default(now())
  updatedAt         DateTime?     @updatedAt
  name              String
  goalDate          DateTime
  goalAmount        Int
  initialSaveAmount Int
  user              User          @relation(fields: [userId], references: [id])
}

model Investment {
  id             String    @id @default(uuid())
  createdAt      DateTime  @default(now())
  updatedAt      DateTime? @updatedAt
  name           String
  amount         Int
  currency       String
  quantity       Float     // e.g. “180 stocks” or “0.9 BTC”
  startDate      DateTime
  initialAmount  Int
  userId         String
  user           User      @relation(fields: [userId], references: [id])
}
